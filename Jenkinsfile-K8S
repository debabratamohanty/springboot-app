pipeline {
    agent any
    
    tools {
        maven 'Maven3'
        }
        
        environment{
            registryName = "acracr2222"
            registryCredential = 'ACR'
            registryUrl = 'acracr2222.azurecr.io'
            dockerImage = ''
                   }
    
    stages {
        stage('checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/debabratamohanty/springboot-app.git']])
                  }
                          }
           
        
        stage ('Build') {
        steps {
            sh 'mvn clean install'           
              }
                        }
                        
         stage ('Build image') {
        steps {
                script {
                    dockerImage = docker.build registryName
                       }
              }
                                } 
                                
         stage("Push image") {
         steps{   
             script {
                docker.withRegistry( "http://${registryUrl}", registryCredential ) {
                dockerImage.push()
                                                                                   }
                    }
               }
                             }
                             
          stage ('Deploy to K8S') {
          steps {
          withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'K8S', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
    
                                                                                                                                                                    }
          sh('kubectl apply -f  jenkins-aks-deploy-from-acr.yaml')
                                                                                                                                                                   
    
                }

                }
            
                                                                                                                                                                     
                                 }
        }  
